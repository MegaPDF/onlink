import os

def create_url_shortener_structure():
    """Generate the URL shortening service folder structure without file content."""
    base_dir = "url-shortener"
    
    # Define the directory and file structure
    structure = [
        "app/layout.tsx",
        "app/page.tsx",
        "app/globals.css",
        "app/auth/signin/page.tsx",
        "app/auth/signup/page.tsx",
        "app/dashboard/page.tsx",
        "app/dashboard/analytics/page.tsx",
        "app/dashboard/links/page.tsx",
        "app/dashboard/folders/page.tsx",
        "app/dashboard/team/page.tsx",
        "app/dashboard/settings/page.tsx",
        "app/dashboard/billing/page.tsx",
        "app/dashboard/layout.tsx",
        "app/admin/page.tsx",
        "app/admin/users/page.tsx",
        "app/admin/links/page.tsx",
        "app/admin/domains/page.tsx",
        "app/admin/billing/page.tsx",
        "app/admin/security/page.tsx",
        "app/admin/reports/page.tsx",
        "app/admin/settings/page.tsx",
        "app/admin/layout.tsx",
        "app/api/auth/[...nextauth]/route.ts",
        "app/api/client/shorten/route.ts",
        "app/api/client/bulk-shorten/route.ts",
        "app/api/client/analytics/route.ts",
        "app/api/client/qrcode/route.ts",
        "app/api/client/folders/route.ts",
        "app/api/client/team/route.ts",
        "app/api/client/my-links/route.ts",
        "app/api/client/export/route.ts",
        "app/api/admin/users/route.ts",
        "app/api/admin/links/route.ts",
        "app/api/admin/domains/route.ts",
        "app/api/admin/billing/route.ts",
        "app/api/admin/security/route.ts",
        "app/api/admin/reports/route.ts",
        "app/api/admin/settings/route.ts",
        "app/api/webhook/stripe/route.ts",
        "app/api/webhook/analytics/route.ts",
        "app/api/redirect/[shortCode]/route.ts",
        "app/[shortCode]/page.tsx",
        "app/bio/[username]/page.tsx",
        "lib/mongodb.ts",
        "lib/auth.ts",
        "lib/validations.ts",
        "lib/utils.ts",
        "lib/email.ts",
        "lib/stripe.ts",
        "lib/analytics.ts",
        "lib/qr-generator.ts",
        "lib/security.ts",
        "models/User.ts",
        "models/URL.ts",
        "models/Folder.ts",
        "models/Team.ts",
        "models/Domain.ts",
        "models/Subscription.ts",
        "models/Settings.ts",
        "models/Analytics.ts",
        "models/AuditLog.ts",
        "components/ui/accordion.tsx",
        "components/ui/alert.tsx",
        "components/ui/alert-dialog.tsx",
        "components/ui/avatar.tsx",
        "components/ui/badge.tsx",
        "components/ui/button.tsx",
        "components/ui/calendar.tsx",
        "components/ui/card.tsx",
        "components/ui/checkbox.tsx",
        "components/ui/collapsible.tsx",
        "components/ui/command.tsx",
        "components/ui/context-menu.tsx",
        "components/ui/dialog.tsx",
        "components/ui/dropdown-menu.tsx",
        "components/ui/form.tsx",
        "components/ui/input.tsx",
        "components/ui/label.tsx",
        "components/ui/menubar.tsx",
        "components/ui/navigation-menu.tsx",
        "components/ui/popover.tsx",
        "components/ui/progress.tsx",
        "components/ui/radio-group.tsx",
        "components/ui/scroll-area.tsx",
        "components/ui/select.tsx",
        "components/ui/separator.tsx",
        "components/ui/sheet.tsx",
        "components/ui/skeleton.tsx",
        "components/ui/slider.tsx",
        "components/ui/switch.tsx",
        "components/ui/table.tsx",
        "components/ui/tabs.tsx",
        "components/ui/textarea.tsx",
        "components/ui/toast.tsx",
        "components/ui/toaster.tsx",
        "components/ui/tooltip.tsx",
        "components/ui/use-toast.ts",
        "components/auth/",
        "components/dashboard/url-shortener.tsx",
        "components/dashboard/bulk-shortener.tsx",
        "components/dashboard/links-table.tsx",
        "components/dashboard/folders-sidebar.tsx",
        "components/dashboard/analytics-dashboard.tsx",
        "components/dashboard/team-management.tsx",
        "components/dashboard/billing-info.tsx",
        "components/admin/system-metrics.tsx",
        "components/admin/users-management.tsx",
        "components/admin/domain-management.tsx",
        "components/admin/security-dashboard.tsx",
        "components/admin/reports-generator.tsx",
        "components/shared/",
        "types/auth.ts",
        "types/url.ts",
        "types/user.ts",
        "types/team.ts",
        "types/billing.ts",
        "types/settings.ts",
        "hooks/use-auth.ts",
        "hooks/use-analytics.ts",
        "hooks/use-billing.ts",
        "hooks/use-toast.ts"
    ]
    
    # Create base directory
    os.makedirs(base_dir, exist_ok=True)
    
    # Create all files and directories
    for path in structure:
        full_path = os.path.join(base_dir, path)
        os.makedirs(os.path.dirname(full_path), exist_ok=True)
        if not os.path.isdir(full_path):  # Only create files, not directories
            open(full_path, 'a').close()  # Create empty file

if __name__ == "__main__":
    create_url_shortener_structure()
    print("URL shortener structure generated successfully!")